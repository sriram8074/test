package com.amazonaws.kendra.connector.aem.client;

import java.io.InputStream;
import java.util.Arrays;
import java.util.List;

import java.io.BufferedReader;
import java.io.IOException;

import java.io.InputStreamReader;
import java.io.Reader;
import java.net.URL;
import java.nio.charset.Charset;

import org.json.JSONException;
import org.json.JSONObject;

import org.json.JSONArray;

import com.amazonaws.kendra.connector.sdk.model.principal.Group;
import com.amazonaws.kendra.connector.sdk.model.principal.ListGroupMembersResponse;
import com.amazonaws.kendra.connector.sdk.model.principal.ListGroupsResponse;

import com.google.gson.JsonObject;

public class AemIdentityService {
   
    
	public ListGroupsResponse buildGroupsForIdentityCrawler(String cursor, int limit) throws IOException, JSONException 
	{
		JSONObject json = readJsonFromUrl("http://localhost:4502/bin/querybuilder.json?property=jcr:primaryType&property.value=rep:Group&limit=-1");
		JSONArray jarray = json.getJSONArray("hits");
		
		for(int i=0;i<jarray.length();i++) {
			JSONObject group = jarray.getJSONObject(i);
			String Purl = group.getString("path");
			String gurl = "http://localhost:4502" + Purl + ".infinity.json"; 
			
			readJsonFromUrl(gurl);
			JSONArray members = json.getJSONArray("rep:members");
			for (int j=0; j<members.length();j++)
			{
				String memid = members.getString(j);
				String uurl = "http://localhost:4502/bin/querybuilder.json?property=jcr:uuid&property.value=" + memid + "&p.limit=-1";
				
				readJsonFromUrl(uurl);
				JSONArray uarray = json.getJSONArray("hits");
				//JSONObject ulink = uarray.getJSONObject();
				
			}
			}
		
		
		
		
		
		
		return null;
		
	
	}
	 public static JSONObject readJsonFromUrl(String url) throws IOException, JSONException {
		    InputStream is = new URL(url).openStream();
		    try {
		      BufferedReader rd = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")));
		      String jsonText = readAll(rd);
		      JSONObject json = new JSONObject(jsonText);
		      return json;
		    } finally {
		      is.close();
		    }
		  }
	 private static String readAll(Reader rd) throws IOException {
		    StringBuilder sb = new StringBuilder();
		    int cp;
		    while ((cp = rd.read()) != -1) {
		      sb.append((char) cp);
		    }
		    return sb.toString();
		  }
	 
	

	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 public ListGroupMembersResponse buildGroupMembersForIdentityCrawler(Group group, String cursor, int limit) {
		
		return null;
	}

}
