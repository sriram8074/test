private Optional<Item> buildTicketCommentItem(ItemInfo itemInfo, Ticket ticket, Zendesk zendesk) {
    if (Objects.nonNull(ticket)) {
      List<Optional<Item>> list = new ArrayList<>();
      Long commentId =
          Long.parseLong(itemInfo.getMetadata().get(ZendeskItemMetadata.ZENDESK_TICKET_COMMENT_ID));
      //QFIX - where is NumberFormatException arising from parseLong is handled?
      try {
        Iterable<Comment> ticketComments = this.ticketCommentService
            .getTicketCommentsByTicketId(ticket.getId(), this.zendesk, this.zendeskService);
        zendeskService.executeServiceCallsWithRetry(() -> {
          ticketComments.forEach(comment -> {
            if (comment.getId().equals(commentId)) {
              list.add(ticketCommentItem(itemInfo, ticket, comment, zendesk));
            }
          });
          return null;
        });
        return list.get(0);
      } catch (Exception exception) {
        //QFIX - Below log should be visible to customer.
        appLog.error("[{}] - An exception has occurred while getting "
                + "ticket comments of ticket ID:{}, {}",
            StackTraceLogger.getUuid(), ticket.getId(), exception.getMessage(), exception);
        ExceptionHandler.handleInternalServerException(exception, Boolean.TRUE);
        return Optional.empty();
      }
    } else {
      return Optional.empty();
    }
  }
